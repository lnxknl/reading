
    - GCC 编译器在编译一个C语言程序时需要经过以下 4 步：  将C语言源程序预处理，生成.i文件。

    - 预处理后的.i文件编译成为汇编语言，生成.s文件。

    - 将汇编语言文件经过汇编，生成目标文件.o文件。

    - 将各个模块的.o文件链接起来生成一个可执行程序文件。
   表：GCC常用的编译选项    gcc编译选项   选项的意义     -c   编译、汇编指定的源文件，但是不进行链接     -S   编译指定的源文件，但是不进行汇编     -E   预处理指定的源文件
，不-I directory   指定 include 包含文件的搜索目录     -g   生成调试信息，该程序可以被调试器调试

   还有另一个 GCC 选项，可以方便地一次获得全部的中间输出文件，这就是-save-temps。当使用该选项时，GCC 会正常地编译和链接，但是会把预处理器输出、汇编语言和对象文件全部存储

   为了编译这个 main.c，必须使用-l选项，以链接数学库： $ gcc main.c -o main.out -lm

   数学库的文件名是 libm.a。前缀lib和后缀.a是标准的，m是基本名称，GCC 会在-l选项后紧跟着的基本名称的基础上自动添加这些前缀、后缀，本例中，基本名称为 m。

      在支持动态链接的系统上，GCC 自动使用在 Darwin 上的共享链接库 libm.so 或 libm.dylib。

   通常，GCC 会自动在标准库目录中搜索文件，例如 /usr/lib，如果想链接其它目录中的库，就得特别指明。有三种方式可以链接在 GCC 搜索路径以外的链接库，下面我们分别讲解。
   如果想把C语言变量的名称作为汇编语言语句中的注释，可以加上-fverbose-asm选项： $ gcc -S -fverbose-asm circle.c

   而且，如果命令行中出现了-I-，那么包括源文件本身的目录不再自动作为搜索头文件的目录。


    - 对于include目录而言，通常的搜索顺序是：  包含指定源文件的目录（对于在 #include 命令中以引号包括的文件名）。

    - 采用-iquote选项指定的目录，依照出现在命令行中的顺序进行搜索。只对 #include 命令中采用引号的头文件名进行搜索。

    - 采用-I选型指定的目录，依照出现在命令行中的顺序进行搜索。

    - 采用环境变量 CPATH 指定的目录。

    - 采用-isystem选项指定的目录，依照出现在命令行中的顺序进行搜索。

    - 采用环境变量 C_INCLUDE_PATH 指定的目录。

    - 系统默认的 include 目录。

   2) 使用-L选项，为 GCC 增加另一个搜索链接库的目录： $ gcc main.c -o main.out -L/usr/lib -lm

   可以使用多个-L选项，或者在一个-L选项内使用冒号分割的路径列表。


   3) 把包括所需链接库的目录加到环境变量 LIBRARYPATH 中。
       例如，从源文件生成动态链接库： $ gcc -fPIC -shared func.c -o libfunc.so

       从目标文件生成动态链接库： $ gcc -fPIC -c func.c -o func.o

       $ gcc -shared func.o -o libfunc.so
